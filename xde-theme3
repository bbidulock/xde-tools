#!/usr/bin/perl

# in case we get executed (not sourced) as a shell program
eval 'exec perl -S $0 ${1+"@"}'
    if $running_under_some_shell;

BEGIN {
    use strict;
    use warnings;
    my $here = $0; $here =~ s{/[^/]*$}{};
    if ($here =~ s{^\.}{}) {
	chomp(my $cwd = `pwd`);
	$here = "/$here" if $here;
	$here = "$cwd$here";
    }
    unshift @INC, "$here/lib" unless $here =~ m{^/usr/bin};
}

use Getopt::Long;
use Encode;
use Storable qw(freeze thaw);
use I18N::Langinfo qw(langinfo CODESET);
use POSIX qw(locale_h);
use Gtk2;
use Gtk2::Unique;
use XDE::Theme;
use strict;
use warnings;

my %OVERRIDES = ();
my $here = $0; $here =~ s{/[^/]*$}{};
if ($here =~ s{^\.}{}) {
    chomp(my $cwd = `pwd`);
    $here = "/$here" if $here;
    $here = "$cwd$here";
}
unless ($here =~ m{^/usr/bin}) {
    %OVERRIDES = (
	HERE               => "$here",
	XDG_CONFIG_PREPEND => "$here/xdg/xde:$here/xdg",
	XDG_DATA_PREPEND   => "$here/share/xde:$here/share",
	XDG_ICON_APPEND    => "$here/share/icons:$here/share/pixmaps",
    );
    my %path = (map{$_=>1}split(/:/,$ENV{PATH}));
    $ENV{PATH} = "$here:$ENV{PATH}" unless exists $path{$here};
}

my $program = $0; $program =~ s{^.*/}{};

my %ops = (
    help	=> '',
    verbose	=> '',
    prompt	=> '',
    banner	=> '',
    noask	=> '',
    charset	=> langinfo(CODESET),
    language	=> setlocale(LC_MESSAGES),
    setdflt	=> '',
    default	=> '',
    current	=> '',
    choice	=> '',
    vendor	=> '',
    monitor	=> 1,
    grab	=> 1,
    theme	=> '',
    id		=> '',
    setroot	=> 1,
    display	=> $ENV{DISPLAY},
    timestamp	=> 0,
    screen	=> '',
    workspace	=> '',
    name	=> '',
    icon	=> '',
    binary	=> '',
    description	=> '',
    wmclass	=> '',
    silent	=> '',
    appid	=> '',
    exec	=> '',
    file	=> '',
    url		=> '',
    argv	=> '',
);

my $xde = XDE::Theme->new(%OVERRIDES,ops=>\%ops);
$xde->getenv;

my $syntax = GetOptions(
    'help|h'		=> \$ops{help},
    'verbose|v'		=> \$ops{verbose},
    'charset|c=s'	=> \$ops{charset},
    'language|L=s'	=> \$ops{language},
    'monitor!'		=> \$ops{monitor},
    'n'			=> sub{$ops{monitor}=0},
    'display|d=s'	=> \$ops{display},
    'screen|s=i'	=> \$ops{screen},
);


# vim: set sw=4 tw=72 fo=tcqlorn:
