#!/usr/bin/perl

# in case we get executed (not sourced) as a shell program
eval 'exec perl -S $0 ${1+"@"}'
    if $running_under_some_shell;

BEGIN {
    use strict;
    use warnings;
    my $here = $0; $here =~ s{/[^/]*$}{};
    if ($here =~ s{^\.}{}) {
	chomp(my $cwd = `pwd`);
	$here = "/$here" if $here;
	$here = "$cwd$here";
    }
    unshift @INC, "$here/lib" unless $here eq '/usr/bin';
}

use Getopt::Long;
use Glib qw(TRUE FALSE);
use Gtk2;
use XDE::Setbg;
use strict;
use warnings;

my %OVERRIDES = ();
my $here = $0; $here =~ s{/[^/]*$}{};
if ($here =~ s{^\.}{}) {
    chomp(my $cwd = `pwd`);
    $here = "/$here" if $here;
    $here = "$cwd$here";
}
unless ($here eq '/usr/bin') {
    %OVERRIDES = (
	HERE               => "$here",
	XDG_CONFIG_PREPEND => "$here/xdg/xde:$here/xdg",
	XDG_DATA_PREPEND   => "$here/share/xde:$here/share",
	XDG_ICON_APPEND    => "$here/share/icons:$here/share/pixmaps",
    );
    my %path = (map{$_=>1}split(/:/,$ENV{PATH}));
    $ENV{PATH} = "$here:$ENV{PATH}" unless exists $path{$here};
}

=head1 NAME

xde-setbg2 -- set backgrounds and monitor for desktop changes

=head1 SYNOPSIS

xde-setbg2 -- [OPTIONS] [FILE [FILE ...]]

=head1 DESCRIPTION

B<xde-setbg2> is a gtk2-perl application that can be used to set the
backgrounds on multiple desktops or workspaces for lightweight dinwo
managers that do not have this capability on their own.  It installs the
specified pixmap to the current desktop and monitors for changes.

On the initial invocation of B<xde-setbg2> for a given X Display,
B<xde-setbg2> will set the current desktop and place itself in the
background monitoring for desktop changes.  When the desktop changes, it
will change the background of the root window to the corresponding
selected background.

Backgrounds amy be specified using a configuration file or specified on
the command line as a list of backgrounds, one per desktop or workspace.

B<xde-setbg2> understands the file and style settings for variious
lightweight window managers: L<fluxbox(1)>, L<blackbox(1)>,
L<openbox(1)>, L<icewm(1)>, L<fvwm(1)>, L<lxde(1)> and L<wmaker(1)>.  It
can also detect which of these (or a number of other) window managers
are running and present.  If a multiple-background capable window
manager is present (such as L<wmaker(1)> or an L<lxde(1)> session with
L<pcmanfm(1)> desktop), B<xde-setbg2> exits and does nothing.

When there is a current background on initial startup, B<xde-setbug>
assumes that this is a desktop that is applied to all window managers.

=head1 ARGUMENTS

B<xde-setbg2> takes the following arguments:

=over

=item [I<FILE> [I<FILE>] ...]

A list of files that specify which backgrounds to use for which virtual
desktops.

=back

=cut

my %ops = (
    help	=> '',
    verbose	=> '',
    prompt	=> '',
    banner      => '',
    noask	=> '',
    charset	=> '',
    language	=> '',
    setdflt     => '',
    default	=> '',
    current	=> '',
    choice	=> '',
    vendor	=> '',
    monitor	=> 1,
    grab	=> '',
    theme	=> '',
    id		=> '',
    setroot	=> 1,
);

my $xde = XDE::Setbg->new(%OVERRIDES,ops=>\%ops);
$xde->getenv;

=head1 OPTIONS

=over

=item B<--help>, B<-h>

Print usage information to standard error containing current defaults
and exit.

=item B<--verbose>, B<-v>

Print debugging information on standard error while running.

=item B<--grab>, B<-g>

Grab the X Display while setting backgrounds.

=item B<--setroot>, B<-s>

Set the background pixmap on the root window instead of just setting the
root window pixmap properties.

=item B<--nomonitor>, B<-n>

Specifies that B<xde-setbg> should just set the background(s) and should
not monitor for changes.  Just used L<hsetroot(1)> or some other instead
of this option.

=item B<--theme>, B<-t> I<THEME>

Tells B<xde-setbg> which theme or style is currently being used by the
window manager.

=back

=cut

my $syntax = GetOptions(
    'help|h'	    => \$ops{help},
    'verbose|v'	    => \$ops{verbose},
    'monitor!'	    => \$ops{monitor},
    'setroot|s'	    => \$ops{setroot},
    'grab|g'	    => \$ops{grab},
    'n'		    => sub{ $ops{monitor} = 0 },
    'id=s'	    => \$ops{id},
);

my @files = @ARGV;

$ops{id} = hex($ops{id}) if $ops{id} and $ops{id} =~ m{^0x};

$xde->default; # reset defaults

sub show_usage {
    print STDERR<<EOF;
USAGE:
    xde-setbg [OPIONS] [FILE [FILE ...]]
EOF
    exit(0);
}

$xde->init;

$xde->set_backgrounds(@files);

$xde->main;


# vim: sw=4 tw=72
