
EWMH client messages:

_NET_NUMBER_OF_DESKTOPS: [32] new_number_of_desktops

	Change the number of desktops.

_NET_DESKTOP_GEOMETRY: [32] new_width, new_height

	Change the destop geometry

_NET_DESKTOP_VIEWPORT: [32] new_vx, new_vy

	Change the desktop viewport

_NET_CURRENT_DESKTOP: [32] new_index, timestamp=0

	Change the current desktop

_NET_DESKTOP_NAMES: property, UTF8_STRING[]

	Change the property at any time to change the
	names of the desktops.

_NET_ACTIVE_WINDOW: window, [32] source_ind, timestamp, requestor

	Change the active window.

_NET_SHOWING_DESKTOP: [32] boolean (0 or 1)

	Show the desktop or not.

_NET_CLOSE_WINDOW: window [32] timestamp, source_ind

	Close the specified window.

_NET_MOVERESIZE_WINDOW: window [32] gravity_and_flags, x, y, width, height

	Move or resize the specified window.

_NET_WM_MOVERESIZE: window [32] x_root, y_root, direction, button, source_ind

	Initiate WM move or resize of specified window.

_NET_RESTACK_WINDOW: window [32] source_ind, sibling, detail

	Restack the specified window.

_NET_REQUEST_FRAME_EXTENTS: window

	Request WM to set frme extexts.

_NET_WM_DESKTOP: window [32] new_desktop, source_ind

	Change the desktop of the specified window.

_NET_WM_STATE: window [32] action, 1st property, 2nd property, source_ind

	Change the state of a mapped window.

WM_PROTOCOLS: window [32] _NET_WM_PING, timestamp, client_window

	Sent from WM to client and client to root for ping protocol.

_NET_WM_FULLSCREEN_MONITORS: window [32] top, bot, left, right, source_ind

	Set the monitors that define Xinerama fullscreen mode.


Testing for window managers:

IceWM:	Sets _NET_SUPPORTING_WM_CHECK(WINDOW) appropriately.  Note that is sets
	_WIN_SUPPORTING_WM_CHECK(CARDINAL) as well.  Also, it sets both
	_NET_SUPPORTING_WM_CHECK(WINDOW) and _WIN_SUPPORTING_WM_CHECK to the
	same window.  It sets _NET_WM_NAME(STRING) to "IceWM 1.3.7 (Linux
	3.4.0-1-ARCH/x86_64)" or some such.  Extract the first word of the
	string for the actual name.  Note that _NET_WM_NAME should be
	(UTF8_STRING) instead of (STRING) [this has been fixed].  It sets
	_NET_WM_PID(CARDINAL) to the pid of the window manager; however, it does
	not set WM_CLIENT_MACHINE(STRING) to the fully qualified domain name of
	the window manager machine as required by the EWMH specification.

Blackbox:
	Blackbox is only EWMH compliant and is not ICCCM/WMH compliant.  It
	properly sets _NET_SUPPORTING_WM_CHECK(WINDOW) on both the root and the
	check window.  On the check window the only other thing it sets is
	_NET_WM_NAME(UTF8_STRING) which is a proper UTF8_STRING with the single
	word "Blackbox". [It now sets _NET_WM_PID correctly, but still does not
	set WM_CLIENT_MACHINE(STRING) to the fully qualified domain name of the
	window manager machine.]

Fluxbox:
	Fluxbox is only EWMH compliant and is not ICCCM/WMH compilant.  It
	properly sets _NET_SUPPORTING_WM_CHECK(WINDOW) no both the root and the
	check window.  On the check window the other thing it sets is
	_NET_WM_NAME(UTF8_STRING) which is a proper UTF8_STRING with the singl
	word "Fluxbox".

	Fluxbox also sets _BLACKBOX_PID(CARDINAL) on the root window.  (Gee,
	blackbox doesn't!)

	Fluxbox interns the _BLACKBOX_ATTRIBUTES atom and then does nothing
	with it.  Fluxbox interns the _FLUXBOX_ACTION, _FLUXBOX_ACTION_RESULT
	and _FLUXBOX_GROUP_LEFT atoms.  Actions are only possible when the
	session.session0.allowRemoteActions resource is set to true.  They are
	effected by changing the _FLUXBOX_ACTION(STRING) property on the root
	window to reflect the new command.  The result is communicated by
	fluxbox by setting the _FLUXBOX_ACTION_RESULT(STRING) property on the
	root window with the result.

Openbox:
	Openbox is only EWMH compilant and is not ICCCM/WMH compliant.  It
	properly sets _NET_SUPPORTING_WM_CHECK(WINDOW) on both the root and the
	check window.  ON the check window the only other thing it sets is
	_NET_WM_NAME(UTF8_STRING) which is a proper UTF8_STRING with the single
	word "Openbox".

	Openbox also sets _OPENBOX_PID(CARDINAL) on the root window.  It also
	sets _OB_VERSION(UTF8_STRING) and _OB_THEME(UTF8_STRING) on the root
	window: Will changing the _OB_THEME actually change the theme?

FVWM:	FVWM is both ICCCM/WMH and EWMH compliant.  It sets
	_NET_SUPPORTING_WM_CHECK(WINDOW) properly on the root and check window.
	On the check window it sets _NET_WM_NAME(UTF8_STRING) to "FVWM".  It
	sets WM_NAME(STRING) to "fvwm" and WM_CLASS(STRING) to "fvwm", "FVWM".
	FVWM implements _WIN_SUPPORTING_WM_CHECK(CARDINAL) in a separate window
	from _NET_SUPPORTING_WM_CHECK(WINDOW), but the same one as
	_WIN_DESKTOP_BUTTON_PROXY(CARDINAL).  There are no additional properties
	set on those windows.

WindowMaker:
	WindowMaker is only EWMH compliant and is not ICCCM/WMH compliant.  It
	properly sets _NET_SUPPORTING_WM_CHECK(WINDOW) on both the root and the
	check window.  It does not set the _NET_WM_NAME(UTF8_STRING) on the
	check window.  It does, however, define a recursive
	_WINDOWMAKER_NOTICEBOARD(WINDOW) that shares the same window as the
	check window and sets the _WINDOWMAKER_ICON_TILE(_RGBA_IMAGE) property
	on this window to the ICON/DOCK/CLIP tile.

PeKWM:
	PeKWM is only EWMH compliant and is not WMH compliant.  It properly sets
	_NET_SUPPORTING_WM_CHECK(WINDOW) on both the root and the check window.
	It sets _NET_WM_NAME(STRING) on the check window.  Note that
	_NET_WM_NAME should be (UTF8_STRING) instead of (STRING) (corrected in
	'git' version).  It does not set WM_CLIENT_MACHINE(STRING) on the check
	window as required by EWMH, but sets it on the root window.  It does
	not, however, set it to the fully qualified domain name as required by
	EWMH.  Also, it sets _NET_WM_PID(CARDINAL) on the check window, but
	mistakenly sets it on the root window.  It sets WM_CLASS(STRING) to a
	null string on the check window and does not set WM_NAME(STRING).

JWM:
	JWM is only EWMH compliant and is not WMH compliant.  It properly sets
	_NET_SUPPORTING_WM_CHECK(WINDOW) on both the root and the check window.
	It properly sets _NET_WM_NAME(UTF8_STRING) on the check window (to
	"JWM").  It does not properly set _NET_WM_PID(CARDINAL) on the check
	window, or anywhere for that matter [it does now].  It does not set
	WM_CLIENT_MACHINE(STRING) anywhere and there is no WM_CLASS(STRING) or
	WM_NAME(STRING) on the check window.

Interesting facts about window managers:

All:	All window managers have AT_SPI_BUS(STRING) set to a DBUS session
	address on the root window.  It appears as though the X Server itself is
	establishing this session address.

IceWM:	IceWM implements the _WIN_DESKTOP_BUTTON_PROXY(CARDINAL) window from the
	GNOME window manager specification.  In fact listening for these events
	is the only way to change the desktop using the mouse scroll wheel.  The
	geometry of this window is the screen area minus 1 pixel a bottom and
	right.

	IceWM is the only one of the bunch it seems (other than WindowMaker)
	that supports WM_ICON_SIZE: it sets a minimum icon size of 32x32,
	maximum 32x32, incremental size change 1x1.

FVWM:	FVWM implements the _WIN_DESKTOP_BUTTON_PROXY(CARDINAL) window from the
	GNOME window maanger specification.  In fac listening for these events
	is a good way to change the desktop using the mouse scroll wheel (as
	FVWM does not do it itself without customization).

	FVWM supports WindowMaker dock apps (i.e. icon windows) but must launch
	them itself (like WindowMaker).  Fluxbox, Blackbox, and Openbox handle
	these automatically.

WindowMaker:
	WindowMaker sets the _WINDOWMAKER_NOTICEBOARD(WINDOW) attribute on the
	root window and on the noticeboard window.  I suppose this is where it
	sends some messages (instead of too root maybe?).  It also sets
	_WINDOWMAKER_WM_PROTOCOLS(ATOM) to _WINDOWMAKER_MENU,
	_WINDOWMAKER_WM_FUNCTION and _WINDOWMAKER_NOTICEBOARD.  I suspect that
	these are ways to get the WM to pop a menu, perform a function or
	communicate via the noticeboard.  It does set WM_ICON_SIZE(WM_ICON_SIZE)
	per ICCCM to minimum 8x8, maximum 60x60, increment by 1x1.

MetaCity:
	Metacity still supports the _WIN_DESKTOP_BUTTON_PROXY(CARDINAL) window
	from the GNOME window manager specification.


SUPPORT:
--------

Current ICCCM support is as follows:

.Item				Awesome	Waimea	Wind	JWM	Fluxbox	PeKWM	IceWM	Bbox	Wmaker	Openbox	FVWM	AStep	Mcity	twm	ctwm	vtwm	mwm	Notes
----				-------	------	----	---	-------	-----	-----	----	------	-------	----	-----	-----	---	----	----	---	
4.1.2 Client properties
WM_NAME
WM_ICON_NAME
WM_NORMAL_HINTS
WM_HINTS
WM_CLASS
WM_TRANSIENT_FOR
WM_PROTOCOLS
WM_DELETE_WINDOW
WM_TAKE_FOCUS
WM_COLORMAP_WINDOWS
WM_COLORMAP_NOTIFY
WM_CLIENT_MACHINE
4.1.3 WM properties
WM_STATE
WM_ICON_SIZE
4.1.4 Changing State
4.1.5 Configuring the window
4.1.6 Changing window attrs
4.1.7 Input focus
WM_HINTS
WM_TAKE_FOCUS
4.1.8 Colormaps
4.1.9 Icons
4.1.10 Pop-up windows
4.1.11 Window groups
4.3 Selections
5. Session management
5.1 Client support
SM_CLIENT_ID
WM_CLIENT_LEADER
WM_WINDOW_ROLE
5.2 WM support

C.Obsolete session management
C.1 Properties
WM_COMMAND
WM_CLIENT_MACHINE
C.2 Termination
C.3 Client responses
WM_SAVE_YOURSELF

WM_S%d				N	-	-	Y	N	N	Y	Y	N	Y	?	?	Y					
WM_CLIENT_LEADER		N	-	-	N	N	Y	Y	N	Y	Y	Y	N	Y					(1)
SM_CLIENT_ID			N	-	-	N	N	Y	Y	N	Y	Y	Y	N	Y					(1)
WM_COMMAND			N	-	-	N	N	N	N	N	Y	Y	N	N	N					(2)
WM_SAVE_YOURSELF		N	-	-	N	N	N	N	N	Y	Y	N	N	N					(2)
Session Management		N	N	N	N	N	N	Y*	N	N	Y*	Y*	N	Y*	Y*	Y*	N	Y*	* libSM
------------------------------	---	---	---	---	---	---	---	---	---	---	---	---	---	---	---	---	---
Total N							2N	2N	0N	0N	2N	0N	0N	0N	2N	0N				
Total Y							0Y	0Y	2Y	2Y	0Y	2Y	2Y	2Y	0Y	2Y				
------------------------------	---	---	---	---	---	---	---	---	---	---	---	---	---	---	---	---	---
Total							2 	2 	2 	2 	2 	2 	2 	2 	2 	2				

Notes:
------
( 1) JWM, Fluxbox, Blackbox, and Afterstep do not support the X Session
     Management Protocol.  However, with good ICCCM and EWMH/NetWM
     support, a window manager sm proxy can be used that saves the
     necessary window state and uses the other parts of ICCCM and
     EWMH/NetWM support to perform the function.

( 2) Only WindowMaker directly supports the obsolete WM_SAVE_YOURSELF
     and WM_COMMAND session management functionality.  The others may
     use the Xorg smproxy(1) program to provide similar functionality
     for the other window managers.

Current EWMH support is as follows:

.Item				uwm	Awesome	Waimea	Wind	JWM	Fluxbox	PeKWM	IceWM	Bbox	Wmaker	Openbox	FVWM	AStep	Mcity	Notes
----				---	-------	------	----	---	-------	-----	-----	----	------	-------	----	-----	-----		
_KDE_NET_SYSTEM_TRAY_WINDOWS	-	-	Y*	-	-	-	-	-	-	-	-	Y	-	-	(* not reported)
_KDE_NET_WM_FRAME_STRUT		-	-	?	-	-	-	-	-	-	-	Y	Y	-	-
_KDE_NET_WM_SYSTEM_TRAY_WINDOW_FOR -	Y	Y*	-	-	-	-	-	-	-	-	Y	-	-	(* not reported)
_KDE_NET_WM_WINDOW_TYPE_OVERRIDE -	-	-	-	-	-	-	-	-	-	Y	-	-	-
_KDE_SPLASH_PROGRESS		-	-	-	-	-	-	-	-	-	-	Y	-	-	-
_KDE_WM_CHANGE_STATE		-	-	-	-	-	-	-	-	-	-	Y	-	-	-
_NET_ACTIVE_WINDOW		Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_CLIENT_LIST_STACKING	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_CLIENT_LIST		Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_CLOSE_WINDOW		Y	Y	*	Y	Y	Y	Y	Y	Y	N	Y	Y	N	Y	(1)
_NET_CURRENT_DESKTOP		Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_DESKTOP_GEOMETRY		Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_DESKTOP_LAYOUT		-	-	-	-	-	-	Y	-	Y	-	Y	-	N	Y	(4)
_NET_DESKTOP_NAMES		Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	(2)
_NET_DESKTOP_VIEWPORT		Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	(3)
_NET_FRAME_EXTENTS		Y	N	N	Y	Y	Y	N	Y	Y	Y	Y	Y	N	Y
_NET_MAXIMIZED_RESTORE		-	-	x	-	-	-	-	-	-	-	-	-	-
_NET_MOVERESIZE_WINDOW		Y	N	N	N	Y	Y	N	Y	Y	N	Y	Y	N	Y	(5)
_NET_NUMBER_OF_DESKTOPS		Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	(23)
_NET_PROPERTIES			-	-	-	-	-	-	-	-	-	-	-	-	-	-
_NET_REQUEST_FRAME_EXTENTS	N	N	N	Y	Y	Y	N	N	N	N	Y	N	N	Y
_NET_RESTACK_WINDOW		N	N	N	N	N	Y	N	Y	N	N	Y	Y	N	Y
_NET_RESTART			-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_SHOWING_DESKTOP		Y	N	N	N	Y	N	N	Y	Y	Y	Y	N	N	Y	(6)
_NET_SHUTDOWN			-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_STARTUP_ID			N	Y	N	N	N	N	N	N	Y	N	Y	N	N	Y	(7)
_NET_STARTUP_INFO_BEGIN		-	Y*	-	-	-	-	-	-	-	-	Y*	-	-	Y*	* libstartup-notification
_NET_STARTUP_INFO		-	Y*	-	-	-	-	-	-	-	-	Y*	-	-	Y*	* libstartup-notification
_NET_SUPPORTED			Y	Y	Y	Y	Y*	Y	Y*	Y*	Y	Y	Y	Y*	Y	Y	(8)
_NET_SUPPORTING_WM_CHECK	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	(9)
_NET_SYSTEM_TRAY_MESSAGE_DATA	-	-	-	-	-	-	-	Y	-	-	-	-	-	-
_NET_SYSTEM_TRAY_OPCODE		Y	Y	-	-	X	-	-	Y	-	-	-	-	-	-	(10)
_NET_SYSTEM_TRAY_ORIENTATION	Y	-	-	-	-	-	-	N	-	-	-	-	-	-
_NET_SYSTEM_TRAY_S%d		-	Y	-	-	Y	Y	-	Y	-	-	-	-	-	-
_NET_SYSTEM_TRAY_VISUAL		-	-	-	-	-	-	-	N	-	-	-	-	-	-
_NET_VIRTUAL_POS		-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_VIRTUAL_ROOTS		-	-	-	-	-	-	-	-	-	-	-	X	X	-	(11)
_NET_WM_ACTION_ABOVE		Y	N	N	N	Y	N	N	Y	Y	N	Y	N	N	Y
_NET_WM_ACTION_BELOW		Y	N	N	N	Y	N	N	Y	Y	N	Y	N	N	Y
_NET_WM_ACTION_CHANGE_DESKTOP	Y	N	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_CLOSE		Y	N	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_FULLSCREEN	Y	N	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_MAXIMIZE_HORZ	Y	N	N	N	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_MAXIMIZE_VERT	Y	N	N	N	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_MINIMIZE		Y	N	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_MOVE		Y	N	N	N	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_RESIZE		Y	N	N	N	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_SHADE		Y	N	N	N	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_ACTION_STICK		Y	-	-	-	Y	Y	Y	Y	Y	Y	-	Y	N	Y
_NET_WM_ALLOWED_ACTIONS		Y	N	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_BYPASS_COMPOSITOR	-	-	-	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_DESKTOP_MASK		-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_DESKTOP			Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_FULL_PLACEMENT		-	-	-	-	-	-	-	-	-	-	X	-	-	?	(12)
_NET_WM_FULLSCREEN_MONITORS	N	N	N	N	N	N	N	Y	Y	N	N	N	N	Y
_NET_WM_HANDLED_ICONS		-	-	-	-	Y	-	-	Y-	Y	Y	-	N*	-		(13)
_NET_WM_ICON_GEOMETRY		-	-	-	-	-	-	-	-	-	Y	Y	Y	-	Y	(14)
_NET_WM_ICON_NAME		-	Y	-	Y	-	Y	Y	Y	Y	Y	Y	Y	N	Y	(15)
_NET_WM_ICON			Y	Y	N	N	Y	Y	Y	Y	-	Y	Y	Y	Y	Y
_NET_WM_MOVERESIZE		N	N	N	N	N	Y	N	Y	N	N	Y	Y	N	Y
_NET_WM_NAME			Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	(16)
_NET_WM_OPAQUE_REGION		-	-	-	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_PID			N	Y	Y	N	Y	N	Y	Y	Y	N	Y	Y	Y	Y	(17)
_NET_WM_PING			-	-	-	-	-	-	-	-	-	-	Y	-	Y	Y	(18)
_NET_WM_STATE_ABOVE		Y	Y	Y*	Y	Y	Y	Y	Y	Y	Y	Y	Y*	N	Y	(21)
_NET_WM_STATE_BELOW		Y	Y	Y*	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_STATE_DECOR_BORDER	-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_STATE_DECOR_HANDLE	-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_STATE_DECOR_TITLE	-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_STATE_DECOR		-	-	x	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_STATE_DEMANDS_ATTENTION	Y	Y	N	N	Y	Y	Y	Y	Y	N	Y	N	N	Y	(19)
_NET_WM_STATE_FOCUSED		N	N	N	N	N	N	N	-	Y	N	N	N	N	N
_NET_WM_STATE_FULLSCREEN	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_STATE_HIDDEN		Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_STATE_MAXIMIZED_HORZ	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y*	Y	Y	(20)
_NET_WM_STATE_MAXIMIZED_VERT	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_STATE_MODAL		Y	Y	N	N	N	Y	Y	Y-	Y	N	Y	Y	Y	Y
_NET_WM_STATE_PARENTRELATIVE_BACKGROUND - -	x	-	-	-	-	-	-	-	-	-	-	-
_NET_WM_STATE_SHADED		Y	N	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_STATE_SKIP_PAGER	Y	N	N	N	Y	N	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_STATE_SKIP_TASKBAR	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_STATE_STAYS_AT_BOTTOM			Y   (old name for _BELOW)
_NET_WM_STATE_STAYS_ON_TOP			Y   (old name for _ABOVE)
_NET_WM_STATE_STICKY		Y	Y	Y	-	Y	Y	Y	Y	Y	Y	-	Y	Y	Y
_NET_WM_STATE			Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_STRUT			Y	N	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	N	Y
_NET_WM_STRUT_PARTIAL		Y	Y	N	N	Y	N	N	Y	Y	N	Y	N	N	Y
_NET_WM_SYNC_REQUEST_COUNTER	N	N	N	N	N	N	N	N	N	N	Y	N	N	N
_NET_WM_SYNC_REQUEST		N	N	N	N	N	N	N	N	N	N	Y	N	N	N
_NET_WM_USER_TIME		N	N	N	N	Y	N	N	Y	Y	N	Y	N	N	Y
_NET_WM_USER_TIME_WINDOW	N	N	N	N	Y	N	N	Y	Y	N	N	N	N	Y
_NET_WM_VISIBLE_ICON_NAME	N	Y	N	Y	Y	N	Y	Y	Y	N	Y	N*	N	N	* misspelt
_NET_WM_VISIBLE_NAME		N	N	Y	Y	Y	N	Y	Y	Y	N	Y	Y	N	N
_NET_WM_WINDOW_OPACITY		Y	Y*	-	-	-	-	Y	-	-	-	-	-	-	-	(24) non-standard
_NET_WM_WINDOW_TYPE_COMBO	N	Y	N	N	N	N	N	Y	Y	N	N	N	N	N
_NET_WM_WINDOW_TYPE_DESKTOP	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_WINDOW_TYPE_DIALOG	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_WINDOW_TYPE_DND		N	Y	N	N	N	N	N	Y	Y	N	N	N	N	N
_NET_WM_WINDOW_TYPE_DOCK	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_WINDOW_TYPE_DROPDOWN_MENU N	Y	N	N	N	N	N	Y	Y	N	N	N	N	N
_NET_WM_WINDOW_TYPE_MENU	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_WINDOW_TYPE_NORMAL	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_WINDOW_TYPE_NOTIFICATION Y	N	N	Y	N	N	Y	Y	N	N	Y	N	N
_NET_WM_WINDOW_TYPE_POPUP_MENU	Y	N	N	N	N	N	Y	Y	N	N*	N	N	N
_NET_WM_WINDOW_TYPE_SPLASH	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	N	N	Y
_NET_WM_WINDOW_TYPE_TOOLBAR	Y	Y	Y	N	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WM_WINDOW_TYPE_TOOLTIP	N	Y	N	N	N	N	N	Y	Y	N	N	N	N	N
_NET_WM_WINDOW_TYPE_UTILITY	Y	Y	Y	N	Y	N	Y	Y	Y	Y	Y	N	N	Y
_NET_WM_WINDOW_TYPE		Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y	Y
_NET_WORKAREA			Y	N	Y	Y	Y	Y	Y	Y	Y	N	Y	Y	N	Y
------------------------------	---	---	---	---	---	---	---	---	---	---	---	---	---	---
Total N				17N	31N	39N	42N	14N	22N	22N	 6N	 6N	27N	 9N	25N	48N	11N
Total Y				60Y	48Y	32Y	31Y	63Y	54Y	55Y	74Y	71Y	50Y	73Y	53Y	29Y	69Y
------------------------------	---	---	---	---	---	---	---	---	---	---	---	---	---	---
Total				80	80	80	80	80	80	80	80	80	80	80	80	80	80

IceWM	    74 Y     6 N	(http://github.com/bbidulock/icewm)
Blackbox    71 Y     6 N	(http://github.com/bbidulock/blackboxwm)
Openbox	    73 Y     9 N
Metacity    69 Y    11 N
JWM	    63 Y    13 N	(http://github.com/joewing/jwm)
UWM	    60 Y    17 N
PeKWM	    55 Y    22 N
FVWM	    53 Y    25 N
Fluxbox	    54 Y    22 N
Wmaker	    50 Y    27 N
Awesome	    48 Y    31 N
Waimea	    32 Y    39 N
Wind	    31 Y    42 N	(http://windwm.sourceforge.net)
AfterStep   29 Y    48 N

Notes:
------

( 1) WindowMaker does not report support for _NET_CLOSE_WINDOW but
     performs the action when requested.

( 2) IceWM does not report support for _NET_DESKTOP_NAMES but does
     support _WIN_WORKSPACE_NAMES.

( 3) IceWM does not support _NET_DESKTOP_VIEWPORT [fixed], but neither support
     large desktops and this should be (0,0) anyway.  Some set (0,0) for each
     desktop, others just set (0,0).  Either is sufficient.
 
( 4) _NET_DESKTOP_LAYOUT is for pagers and does not need to be supported
     by window managers that do not visually represent desktop cycling.

( 5) PeKWM, IceWM and WindowMaker do not support _NET_MOVERESIZE_WINDOW [fixed
     for IceWM].  The fallback used by wmctrl is to move and resize the window
     using X11 protocol directly without regard to gravity.

( 6) IceWM has a show the desktop mode but does not support or report it
     using EWMH.

( 7) _NET_STARTUP_ID is part of the startup notification specificaiton
     and need not be directly supported by the window manager.

( 8) Some WMs (JWM, PekWM, IceWM, FVWM) report _NET_SUPPORTED in
     _NET_SUPPORTED.  It is unnecessary, but does not cause problems.

( 9) Blackbox does not report support for _NET_SUPPORTING_WM_CHECK but
     it, of course, supports it.  UPDATE: Support has been added.

(10) It is not necessary for window managers to advertize support for
     _NET_SYSTEM_TRAY_OPCODE, it is the responsibility of the tray
      manager to intercept these messages (the owner of the
     _NET_SYSTEM_TRAY_Sn selection), although JWM does.

(11) It is not necessary for non-reparenting window managers to announce
     support for virtual roots although FVWM does.

(12) It is not necessary for a window manager to report
     _NET_WM_FULL_PLACEMENT, although Openbox does.

(13) Only IceWM, WindowMaker and FVWM support icon mini-windows and are the only
     ones that need to report support for _NET_WM_HANDLED_ICONS.  Note, however,
     that FVWM misspells this as _NET_WM_HANDLED_ICON (missing the trailing `S').

(14) Only window managers that support animation of iconification
     should report support for _NET_WM_ICON_GEOMETRY.

(15) The ICCM WM_ICON_NAME is sufficient.

(16) The ICCM WM_NAME is sufficient.

(17) Fluxbox does not set _NET_WM_PID for the window manager (neither the root
     window nor the check window), but does set _BLACKBOX_PID on the root window
     to the process ID of the window manager.

     IceWM does not advertise support for _NET_WM_PID in _NET_SUPPORTED [fixed]
     but propertly sets the _NET_WM_PID on the check window to the PID of the
     window manager.

(18) _NET_WM_PING should not be used on the root window, but Openbox does.

(19) _NET_WM_STATE_DEMANDS_ATTENTION is marked as a TODO in IceWM code [UPDATE:
     IceWM now fully supported _NET_WM_STATE_DEMANDS_ATTENTION].  Blackbox
     defines the atom but does not do anything with it. (UDPATE: Blackbox now
     fully supports _NET_WM_STATE_DEMANDS_ATTENTION.)  Simply not supported by
     FVWM.  WindowMaker does not even define the atom, but should be able to
     support it (by bouncing app icons).  Note that a taskbar could support this
     separate from the window manager.

(20) FVWM uses both _NET_WM_STATE_MAXIMIZED_HORIZ as well as
     _NET_WM_STATE_MAXIMIXED_HORZ.  This is a bug?  The Win/WM specification
     had a bit field for WM_STATE_MAXIMIZED_HORIZ.

(21) FVWM also supports _NET_WM_STATE_STAYS_ON_TOP which it turns out is an old
     KDE hack that was the same _NET_WM_STATE_ABOVE, should have had _KDE_ in
     front of it, and was deprecated in favor of _NET_WM_STATE_ABOVE; see:
     http://quickgit.kde.org/?p=kde-workspace.git&a=blob&f=kwin%2FCOMPLIANCE

(22) FVWM misspells _NET_WM_VISIBLE_ICON_NAME as _NET_WM_ICON_VISIBLE_NAME.

(23) FVWM, JWM and IceWM do not respond to a _NET_NUMBER_OF_DESKTOPS message
     requesting a change.  Fluxbox, PeK, Blackbox, WindowMaker, Openbox do.  I
     don't know about AfterStep.

(24) Awesome supports _NET_WM_WINDOW_OPACITY but does not report it in
     _NET_SUPPORTED.


Current WMH support is as follows:

Note that support for WMH has been removed from maintained window managers and
its use is largely deprecated.  The only active window manager still supporting
WMH is FVWM.

Item				ETWM	JWM	Fluxbox	PeKWM	IceWM	Bbox	Wmaker	Openbox	FVWM
----				----	---	-------	-----	-----	----	------	-------	----
_WIN_APP_STATE			Y	-	-	-	N	-	-	-	N
_WIN_AREA_COUNT			Y	-	-	-	Y*	-	-	-	Y
_WIN_AREA			Y	-	-	-	Y*	-	-	-	Y
_WIN_CLIENT_LIST		Y	-	-	-	Y	-	-	-	Y
_WIN_CLIENT_MOVING		Y	-	-	-	N	-	-	-	N
_WIN_DESKTOP_BUTTON_PROXY	Y	-	-	-	Y*	-	-	-	Y
_WIN_EXPANDED_SIZE		Y	-	-	-	N	-	-	-	N
_WIN_HINTS			Y	-	-	-	Y	-	-	-	Y
_WIN_ICONS			Y	-	-	-	Y	-	-	-	N
_WIN_LAYER			Y	-	-	-	Y	-	-	-	Y
_WIN_MAXIMIZED_GEOMETRY		Y	-	-	-	N	-	-	-	N
_WIN_PROTOCOLS			Y	-	-	-	Y	-	-	-	Y
_WIN_STATE			Y	-	-	-	Y	-	-	-	Y
_WIN_SUPPORTING_WM_CHECK	Y	-	-	-	Y	-	-	-	Y
_WIN_WORKAREA			Y	-	-	-	Y	-	-	-	N
_WIN_WORKSPACE_COUNT		Y	-	-	-	Y	-	-	-	Y
_WIN_WORKSPACE_NAMES		Y	-	-	-	Y	-	-	-	Y
_WIN_WORKSPACE			Y	-	-	-	Y	-	-	-	Y
_WIN_WORKSPACES			Y	-	-	-	?	-	-	-	N
_SWM_VROOT			Y	-	-	-	N	-	-	-	N
-------------------------	---	---	---	---	---	---	---	---	---
Total N				 0 N	-	-	-	 5 N	-	-	-	 8 N
Total Y				19 Y	-	-	-	14 Y	-	-	-	12 Y
-------------------------	---	---	---	---	---	---	---	---	---
Total				20	-	-	-	20	-	-	-	20

* => supported but not included in _WIN_PROTOCOLS().

vim: ft=README tw=80
