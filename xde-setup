#!/usr/bin/perl

# in case we get executed (not sourced) as a shell program
eval 'exec perl -S $0 ${1+"@"}'
    if $running_under_some_shell;

BEGIN {
    use strict;
    use warnings;
    my $here = $0; $here =~ s{/[^/]*$}{};
    if ($here =~ s{^\.}{}) {
	chomp(my $cwd = `pwd`);
	$here = "/$here" if $here;
	$here = "$cwd$here";
    }
    unshift @INC, "$here/lib" unless $here =~ m{^/usr/bin};
}

use Getopt::Long;
use Encode;
use I18N::Langinfo qw(langinfo CODESET);
use POSIX qw(locale_h);
use XDE::Setup;
use strict;
use warnings;

my %OVERRIDES = ();
my $here = $0; $here =~ s{/[^/]*$}{};
if ($here =~ s{^\.}{}) {
    chomp(my $cwd = `pwd`);
    $here = "/$here" if $here;
    $here = "$cwd$here";
}
unless ($here =~ m{^/usr/bin}) {
    %OVERRIDES = (
	HERE               => "$here",
	XDG_CONFIG_PREPEND => "$here/xdg/xde:$here/xdg",
	XDG_DATA_PREPEND   => "$here/share/xde:$here/share",
	XDG_ICON_APPEND    => "$here/share/icons:$here/share/pixmaps",
    );
    my %path = (map{$_=>1}split(/:/,$ENV{PATH}));
    $ENV{PATH} = "$here:$ENV{PATH}" unless exists $path{$here};
}

my %ops = (
    help	=> '',
    verbose	=> '',
    charset	=> langinfo(CODESET),
    language	=> setlocale(LC_MESSAGES),
    vendor	=> '',
    session	=> '',
    xdg_rcdir	=> 1,
    tmp_menu	=> 1,
    dry_run     => 1,
);

my $xde = XDE::Setup->new(%OVERRIDES,ops=>\%ops);
$xde->getenv;

$ops{session} = "\L$xde->{XDG_CURRENT_DESKTOP}\E"
	unless $ops{session};

my $syntax = GetOptions( \%ops,
    'help|h',
    'verbose|v',
    'charset|c=s',
    'language|l=s',
    'vendor|V=s',
    'session|s=s',
    'xdg_rcdir|x!',
    'tmp_menu|t!',
    'dry_run|r!',
);

$ops{session} = shift @ARGV if @ARGV;
$ops{session} = "\L$ops{session}\E" if $ops{session};

if (@ARGV) {
    print STDERR "Excess arguments: ", join(' ',@ARGV), "\n\n";
    show_usage(2);
}

$xde->default; # reset defaults

if ($ops{verbose}) {
    print STDERR "lang:    $ops{lang}\n";
    print STDERR "vendor:  $ops{vendor}\n";
    print STDERR "session: $ops{session}\n";
}

if ($ops{help} or not $syntax) {
    show_usage($syntax ? 0 : 2);
}

unless ($ops{session}) {
    print STDERR "SESSION must be specified!\n\n";
    show_usage(2);
}

$xde = $xde->setup_session($ops{session});

die "Cannot set up session: $ops{session}" unless $xde;

$xde->launch_session($ops{session});

exit(0);

sub show_usage {
    my $rc = shift;
    print STDERR <<END_USAGE;
USAGE:
    xde-setup [OPTIONS] [SESSION]

ARGUMENTS:
    SESSION                 [default: $ops{session}]
        Specifies the session to start.  May be one of fluxbox,
        blackbox, openbox, icewm, fvwm, fvwm2, wmaker, windowmaker.  The
        argument is case insensitive.

OPTIONS:
    --help, -h
        Prints this usage and default information and exits.

    --verbose, -v
        Print debugging information to standard error while operating.

    --charset, -c CHARSET   [default: $ops{charset}]
        specify the character set to use to output the menu; defaults to
        the charset of the current locale.

    --language, -l LANGUAGE [default: $ops{language}]
        specify the language to use to output the menu; defaults to the
        value of the current locale.

    --vendor, -V VENDOR	    [default: $ops{vendor}]
        Specify the vendor string for branding.

    --session, -s SESSION   [default: $ops{session}]
        An alternate way of specifying the SESSION argument.

    --xdg, -x, --no-xdg     [default: $ops{xdg_rcdir}]
        place configuration files in XDG_CONFIG_HOME instead of the
        traditional locations.

    --tmp, -t, --no-tmp     [default: $ops{tmp_menu}]
        place the menu file (and symbolic links from) the /tmp
        directory.

    --dry_run, -r           [default: $ops{dry_run}]
        don't execute or copy anything, just print to STDERR what
        would have been done

FILES:
    $xde->{XDE_CONFIG_DIR}/$xde->{XDE_CONFIG_FILE}
        the file containing the \U$ops{session}\E configuration.

    $xde->{XDE_MENU_DIR}/$xde->{XDE_MENU_FILE}
        the file containing the \U$ops{session}\E menu.

ENVIRONMENT:
    XDG_VENDOR_ID, XDG_MENU_PREFIX
        Interpreted in the absense of the --vendor option.  Set to the
        --vendor option when specified.

    XDG_CURRENT_DESKTOP, DESKTOP_SESSION, FBXDG_DE
        Interpreted in the absense of the --session option or SESSION
        argument.  Set to the --session option or SESSION argument when
        specified.

END_USAGE
    exit($rc);
}

1;

__END__

=head1 NAME

xde-setup - set up and XDE session

=head1 SYNOPSIS

B<xde-setup> [I<OPTIONS>] [I<SESSION>]

=head1 DESCRIPTION

B<xde-setup> is responsible for starting an XDE session for a given
window manager.  It is responsible for establishing or modifying session
configuration files and invoking L<xde-autostart(1p)> with the
appropriate options and arguments.

B<xde-setup> is also responsible for establishing XDG environment
variables when they have not already been set in the environment.

B<xde-setup> can be invoked automagically from L<xde-chooser(1p)>.

=head1 OPTIONS

B<xde-setup> uses L<Getopt::Long(3pm)> to parse options, so
abbreviated or single-dash long options are recognized when not
ambiguous.  B<xde-setup> recognizes the following options:

=over

=item B<--help>, B<-h>

Print usage information to standard error containing current defaults
and exit.

=item B<--verbose>, B<-v>

Print debugging information to standard error during operation.

=item B<--charset>, B<-c> I<CHARSET>

Specify the character set with which to output the menu.  Defaults to
the character set in use by the current locale.

=item B<--language>, B<-l> I<LANGUAGE>

Specify the output language for the menu.  Defaults to the language set
in the current locale.

=item B<--vendor>, B<-V>

Specify the vendor string.  This affects the setting of
B<XDG_MENU_PREFIX> and B<XDG_VENDOR_ID> (see L</ENVIRONMENT>).  When
unspecified it defaults to C<$XDG_VENDOR_ID> or is derived from
C<$XDG_MENU_PREFIX>; otherwise, it is set to a null string.

=item B<--session>, B<-s> I<SESSION>

Alternate way to specify the session to set up.  When unspecified,
defaults to that obtained from environment variables.

=back

=head1 ARGUMENTS

B<xde-setup> recognizes the following non-option arguments:

=over

=item I<SESSION>

The I<SESSION> argument is mandatory.  It must contain a recognized
session or B<xde-setup> will fail to start.

B<xde-setup> recognizes the following session arguments:

=over

=item C<fluxbox>

=item C<blackbox>

=item C<openbox>

=item C<icewm>

=item C<fvwm> or C<fvwm2>

=item C<wmaker> or C<windowmaker>

=back

=back

=head1 WINDOW MANAGERS

The window manager is specified using the I<SESSION> argument.  The
actions performed by B<xde-setup> depend on the target window manager.

The directories and organization of themes must be consistent with those
of the L<xde-menugen(1p)>  and L<xde-traymenu(1p)> tools in the XDE
suite so that theme options presented to users in window manager
specific menus are consistent.

The actions performed for specific window managers are as follows:

=over

=item L<fluxbox(1)>

=item L<blackbox(1)>

=item L<openbox(1)>

=item L<icewm(1)>

=item L<fvwm(1)>, L<fvwm2(1)>

=item L<wmaker(1)>

=back

=head1 UTILITIES

B<xde-setup> also sets up the following LXDE and other utilities:

=over

=item L<lxpanel(1)>

=item L<pcmanfm(1)>

=back

=head1 X PROPERTIES

B<xde-setup> establishes the following X properties on the root window
for use by other tools in the XDE suite:

=over

=item B<_XDE_SESSION>

This X property on the root window is set to the lower-case I<SESSION>
argument, to identify the window manager in use to other tools, such as
L<xde-menugen(1p)> and L<xdg-traymenu(1p)>.

=item B<_XDE_CONFIG_DIR>

This X property on the root window is set to the localized path string
of the configuration directory that is set up for the window manager.
This property defaults to F<$XDG_CONFIG_HOME/$SESSION>, where
C<$SESSION> is the setting of the I<SESSION> argument.

=item B<_XDE_CONFIG_FILE>

This X property on the root window is set to the localized path string of
the primary configuration file of the window manager.  The precise file
name depends on the I<SESSION> argument.  For example, for a
L<fluxbox(1)> session, this is set to F<$XDG_CONFIG_HOME/fluxbox/init>.

=item B<_XDE_MENU_FILE>

This X property on the root window is set to the localized path string
of the root menu file.  To avoid competition between menu files of NFS
mounted home directories, when the user has a session open on mutliple
machines, this file must be uniquely named so that L<xde-menugen(1p)>
or L<xde-traymenu(1p)> instances running in multiple sessions to not
fight over the menu file contents.  Multiple instances for the same
B<XDG_MENU_PREFIX> do not need to differ for multiple sessions on the
same machine.  Therefore, this file should be stored in the only local
machine specific directory that is writable with user permissions.  That
directory is F</tmp>.  The property is set to:
F</tmp/xde/$DESKTOP_SESSION/${XDG_MENU_PREFIX}menu> and a file is
suitably created for that purpose.

=back

=cut

#sub set_xprops {
#    my $root = Gtk2::Gdk::Screen->get_default()->get_root_window;
#    my $type = Gkt2::Gdk::Atom->intern('STRING',FALSE);
#    foreach my $name (qw(XDE_SESSION XDE_CONFIG_DIR XDE_CONFIG_FILE XDE_MENU_FILE)) {
#	my $value = *{$name};
#	if (my $atom = Gtk2::Gdk::Atom->intern("_$name",FALSE)) {
#	    $root->property_change($atom,$type,Gtk2::Gdk::CHARS,'replace',$value);
#	}
#    }
#}

=head1 ENVIRONMENT

B<xde-setup> interprets (and sets if necessary) the following
environment variables:

=over

=item B<DESKTOP_SESSION>

This environment variable is interpreted by L<pcmanfm(1)> and is
normally set by L<lxsession(1)> to communicate the B<--profile> option
to these tools.  It is set to the upper-case I<SESSION> argument.  For
example, for a L<fluxbox(1)> session, this is set to C<FLUXBOX>.
Possible values are: C<FLUXBOX>, C<BLACKBOX>, C<OPENBOX>, C<ICEWM>,
C<FVWM>, C<WMAKER>.

=item B<FBXDG_DE>

This environment variable is interpreted by the L<fbautostart(1)> tool.
It is set to the same value as C<$DESKTOP_SESSION>.

=item B<XDG_CONFIG_DIRS>

Specifies the system XDG configuration directories.  When unspecified
set to F</etc/xdg> in accordance with XDG specifications.
This environment variable is always prefixed with the path
F</etc/xdg/xde> when the path is not already contained in the
variable.

=item B<XDG_CONFIG_HOME>

Specifies the user XDG configuration directory.  When unspecified, set
to F<$HOME/.config> in accordance with XDG specifications.

=item B<XDG_CURRENT_DESKTOP>

Set to the current desktop environment.  The setting is the upper-case
I<SESSION> argument, and may be one of C<FLUXBOX>, C<BLACKBOX>,
C<OPENBOX>, C<ICEWM>, C<FVWM>, C<WMAKER>.

=item B<XDG_DATA_DIRS>

Specifies the system XDG data directories.  When unspecified, set to
F</usr/local/share:/usr/share> in accordance with XDG specifications.
This environment variable is always prefixed with the path
F</usr/share/xde> when the path is not already contained in the
variable.

=item B<XDG_DATA_HOME>

Specifies the user XDG data directory.  When unspecified, set to
F<$HOME/.local/share> in accordance with XDG specifications.

=item B<XDG_MENU_PREFIX>

Specifies the menu prefix to use when generating XDG menus.  The value
is set to B<${XDG_VENDOR_ID}-> when an appropriate menu exists in
F<@XDG_CONFIG_DIRS/menus>.  It defaults to unset otherwise.

=item B<XDG_VENDOR_ID>

Specifies the vendor id for branding.  This variable is set to the
lower-case value of the B<--vendor> argument.  This environment variable
is only changed when the B<--vendor> argument has been specified.

=back

=head1 HISTORY

B<xde-setup> was written to establish the environment necessary for
running a window-manager under the X Desktop Environment (XDE).

=head1 AUTHOR

Brian Bidulock <bidulock@cpan.org>

=head1 SEE ALSO

L<XDE::Setup(3pm)>,
L<xde-autostart(1p)>.

=cut

# vim: sw=4 tw=72
