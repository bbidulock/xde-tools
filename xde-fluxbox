#!/usr/bin/perl

# in case we get executed (not sourced) as a shell program
eval 'exec perl -S $0 ${1+"@"}'
    if $running_under_some_shell;

BEGIN {
    use strict;
    use warnings;
    my $here = $0; $here =~ s{/[^/]*$}{};
    if ($here =~ s{^\.}{}) {
	chomp(my $cwd = `pwd`);
	$here = "/$here" if $here;
	$here = "$cwd$here";
    }
    unshift @INC, "$here/lib" unless $here =~ m{^/usr/bin};
}

use Getopt::Long;
use XDE::Context;
use strict;
use warnings;

my %OVERRIDES = ();
my $here = $0; $here =~ s{/[^/]*$}{};
if ($here =~ s{^\.}{}) {
    chomp(my $cwd = `pwd`);
    $here = "/$here" if $here;
    $here = "$cwd$here";
}
unless ($here =~ m{^/usr/bin}) {
    %OVERRIDES = (
	HERE               => "$here",
	XDG_CONFIG_PREPEND => "$here/xdg/xde:$here/xdg",
	XDG_DATA_PREPEND   => "$here/share/xde:$here/share",
	XDG_ICON_APPEND    => "$here/share/icons:$here/share/pixmaps",
    );
    my %path = (map{$_=>1}split(/:/,$ENV{PATH}));
    $ENV{PATH} = "$here:$ENV{PATH}" unless exists $path{$here};
}

my $program = $0; $program =~ s{^.*/}{};

my (@SAVEARGS) = (@ARGV);

my %ops = (
    help    => '',
    verbose => '',
    vendor  => '',
);

my $xde = XDE::Context->new(%OVERRIDES,ops=>\%ops);
$xde->getenv;

my $syntax = GetOptions(\%ops,qw(
    help|h
    verbose|v
    vendor|V=s
));

$xde->default; # reset defaults

if ($ops{help}) {
    print STDOUT show_usage();
    exit(0);
}

unless ($syntax) {
    print STDERR "Syntax ERROR\n";
    print STDERR show_usage();
    exit(2);
}

exit(0);

sub show_usage {
    return <<USAGE_EOF;

USAGE:
    $program [OPTIONS]

OPTIONS:
    --help, h
	prints this usage information and exit

    --verbose, -v
	print debugging information to standard error during operation

    --vendor, -V VENDOR	    [default: $ops{vendor}]
	specify the vendor string for branding

USAGE_EOF
}

1;

__END__

=head1 NAME

xde-fluxbox - launch an XDE session for L<fluxbox(1)>

=head1 SYNOPSIS

B<xde-fluxbox> [I<OPTIONS>]

=head1 DESCRIPTION

Launches an XDE session using L<fluxbox(1)> as the window manager.  Also
performs any necessary setup of the user directory before launching.

=head1 OPTIONS

B<xde-fluxbox> understands the following options:

=over

=item B<--help>, B<-h>

Prints usage information and defaults to standard output and exits.

=item B<--verbose>, B<-v>

Prints debugging information to standard error while operating.

=item B<--vendor>, B<-V> I<VENDOR>

Specifies the vendor string for branding.  Defaults to C<$XDG_VENDOR_ID>
or derived from C<$XDG_MENU_PREFIX> environment variables when
unspecified.  Otherwise, defaults to an empty string.

=back

=cut

# vim: sw=4 tw=72
