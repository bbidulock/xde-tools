#!/usr/bin/perl

# in case we get executed (not sourced) as a shell program
eval 'exec perl -S $0 ${1+"@"}'
    if $running_under_some_shell;

BEGIN {
    use strict;
    use warnings;
    my $here = $0; $here =~ s{/[^/]*$}{};
    if ($here =~ s{^\.}{}) {
	chomp(my $cwd = `pwd`);
	$here = "/$here" if $here;
	$here = "$cwd$here";
    }
    unshift @INC, "$here/lib" unless $here =~ m{^/usr/bin};
}

use Getopt::Long;
use Encode;
use I18N::Langinfo qw(langinfo CODESET);
use POSIX qw(locale_h);
require XDE::Settings;
use strict;
use warnings;

my %OVERRIDES = ();
my $here = $0; $here =~ s{/[^/]*$}{};
if ($here =~ s{^\.}{}) {
    chomp(my $cwd = `pwd`);
    $here = "/$here" if $here;
    $here = "$cwd$here";
}
unless ($here =~ m{^/usr/bin}) {
    %OVERRIDES = (
	HERE               => "$here",
	XDG_CONFIG_PREPEND => "$here/xdg/xde:$here/xdg",
	XDG_DATA_PREPEND   => "$here/share/xde:$here/share",
	XDG_ICON_APPEND    => "$here/share/icons:$here/share/pixmaps",
    );
    my %path = (map{$_=>1}split(/:/,$ENV{PATH}));
    $ENV{PATH} = "$here:$ENV{PATH}" unless exists $path{$here};
}

my $program = $0; $program =~ s{^.*/}{};

my %ops = (
    help		=> '',
    verbose		=> '',
    vendor		=> '',
    desktop		=> '',
    charset		=> langinfo(CODESET),
    language		=> setlocale(LC_MESSAGES),
    filename		=> '',
    takeover		=> 1,
    persist_on_loss	=> 1,
    kill_owner		=> '',
);

my $xde = XDE::Settings->new(%OVERRIDES,ops=>\%ops);
$xde->getenv;

my $syntax = GetOptions(\%ops, qw(
    help|h
    verbose|v
    vendor|V=s
    desktop|d=s
    charset|c=s
    language|l=s
    filename|f=s
    takeover|t!
    persist_on_loss|p!
    kill_owner|k!
));

$xde->default; # reset defaults

if ($ops{help}) {
    print STDOUT show_usage();
    exit(0);
}

unless ($syntax) {
    print STDERR show_usage();
    exit(2);
}

$xde->init;
$xde->main;

exit(0);

sub show_usage {
    return <<USAGE_EOF;

USAGE:
    $program [OPTIONS]

OPTIONS:
    --help, -h
	print this usage information and exit.

    --verbose, -v
	print debuggin information to standard error during operation.

    --charset, -c CHARSET   [default: $ops{charset}]
	specify the character set to use on output; defaults to the
	charset of the current locale

    --lauguage, -l LANGUAGE [default: $ops{language}]
	specify the language to use on output; defaults to the value for
	the current locale.

    --session, -s SESSION   [default: $ops{session}]
	specify the XDG_CURRENT_DESKTOP session.

    --desktop, -d DESKTOP   [default: $ops{desktop}]
	specify the XDG_CURRENT_DESKTOP desktop.

    --filename, -f FILENAME [default: $ops{filename}]
	specify the configuration file to use instead of the default.

    --takeover, -t	    [default: $ops{takeover}]
	take the selection away from its current owner when necessary.
	
    --persist_on_loss, -p   [default: $ops{persist_on_loss}]
	persist and monitor for relinquishment of ownership when
	ownership is lost.

    --kill_owner, -k	    [default: $ops{kill_owner}]
	kill the client owning the selection when ownership cannot be
	acheived.

USAGE_EOF
}


__END__

=head1 NAME

xde-settings -- an XSETTINGS daemon for the X Desktop Environment

=head1 SYNOPSIS

B<xde-settings> [I<OPTIONS>]

=head1 DESCRIPTION

B<xde-settings> is a gtk2-perl application that implements an XSETTINGS
daemon and metathemes switcher for the X Desktop Environment.

=head1 OPTIONS

=over

=item B<--help>, B<-h>

Print usage information to standard error containing current defaults
and exits.

=item B<--verbose>, B<-v>

Print debugging information to standard error during operation.

=item B<--vendor>, B<-V>

Override the B<XDG_VENDOR_ID> and B<XDG_MENU_PREFIX> environment
variables and internal default settings.

=item B<--desktop>, B<-e> I<DESKTOP>

Override the B<XDG_CURRENT_DESKTOP> environment variables and internal
default settings.

=item B<--charset>, B<-c> I<CHARSET>

Specify the character set to use when generating output.  Defaults to
the character set in use by the current locale.

=item B<--language>, B<-l> I<LANGUAGE>

Specify the language to use when generating output.  Defaults to the
language in use by the current locale.

=item B<--file>, B<-f> I<FILENAME>

Specify the configuration file to use.

=item B<--notakeover>, B<--takeover>

The default is to take ownership of the C<_XSETTNIGS_S[n]> selections
away from an existing owner.  This option causes B<xde-settings> to
monitor for relinquishment of the selections rather than taking
ownership.

=item B<--nopersist_on_loss>, B<--persist_on_loss>

The default is to persist after losing the last C<_XSETTINGS_S[n]>
selection and monitor for loss of ownership.  The default can be
overridden with this option.  When specified, B<xde-settings> will exit
gracefully once the selection is lost.

=item B<--kill_owner>, B<--nokill_owner>

The default when ownership of the C<_XSETTINGS_S[n]> selections cannot
be acheived is to allow the existing owner to retain the selection and
monitor for changes.  This option causes B<xde-settings> to perform a
I<XKillClient> on the current owner.  This is rather drastic, and should
not normally be done.  B<--kill-owner> implies B<--take-selection>.

=back

=head1 BEHAVIOUR

On startup, the script determines if it is a unique instance of
B<xde-settings>.  If it is not, it passes its arguments to the running
instance and exits.

When first starting up, the script reads the last current or default
XSETTINGS from its configuration file.  The configuration file can also
be specified as an option.  When there is no configuration file,
configuration is read from F<$HOME/.gtkrc-2.0>.  After reading the file,
the daemon takes ownership of the C<_XSETTINGS_S[n]> selection for
each screen on the display and manages settings according to the
XSETTINGS protocol.

When the program cannot obtain ownership of the C<_XSETTINGS_S[n]"
selection, it monitors for ownership changes and assumes ownership once
it is reliquished.  An option can be specified that will cause the
program to kill the current owner of the selection if it cannot obtain
it.

Once it has ownership of the selection, the daemon manages settings and
converts selections requested by other XDE applications in accordance
with the ICCM and the XSETTTINGS protocol, until the selection is either
taken away, or the program terminates.  An option can be set to make
B<xde-settings> persist after losing ownership.

During operation, the program monitors its configuration file and the
C<$HOME/.gtkrc-2.0> file for changes, apply the changes to the settings
whenever a change is detected.

Upon choosing to exit or after receiving a $SIG{TERM}, before exiting
gracefully, the daemon writes the current settings back to the
configuration file and optionally to the F<$HOME/.gtkrc-2.0> file.

=head1 CONFIGURATION

When B<xde-settings> starts it reads the configuration file located in
F<$XDG_CONFIG_HOME/xde/xsettings.ini> unless the configuration file was
overridden with options on the command line.  If the configuration file
does not exist, it copies the first file it finds in
F<@XDG_CONFIG_DIRS/xde/xsettings.ini>.  When no configuration file is
found at all, it does not change settings and will write the current
configuration to the configuration file if it is writable.

B<xde-settings> monitors the configuration file for changes and applies
changes when detected.

The configuration file is an F<.ini> fomratted file with two sections:

=over

=item C<[Options]>

The options section contains options that could be passed via the
command line.  The key field is the case-insensitive name of the long
option (with all dashes removed).  The value is the value that would
have been passed with the command line option.  For options that are of
the form B<--option>/B<--nooption>, the key field is the
case-insensitive positive form of the option name (with all dashes
removed); the value field is a case-insensitive boolean: one of C<true>,
C<false>, C<yes>, C<no>, C<0>, C<1>.  Following is an example of the
C<[Options]> section:

 [Options]
 Charset=UTF-8
 Language=en_CA
 File=~/.xde-settings
 Vendor=unexicon
 Desktop=FLUXBOX
 Verbose=true
 TakeSelection=true
 PersistOnLoss=true
 KillOwner=true

=item C<[Xsettings]>

The XSETTINGS section contains key-value pairs that are used to populate
the _XSETTINGS_XSETTING property.  The key fields are the exact text of
the XSETTING property with an optional type character prefixed.  The
type character specifies the type of the value field and is one of C<i>
(for integer), C<s> (for string), or C<c> (for color).  If not
specified, the property will be set as an integer if it is an integer,
octal, hexadecimal or binary number expression.  When it is not an
integer, it will be parsed to see if it is a color specificiation (i.e.
#RRGGBB, #RRGGBBAA, #RRRRGGGGBBBB, #RRRRGGGGBBBBAAAA, rgb: RR/GG/BB, or
rgb: colorname), in which case a color is used.  When not a color, a
string wil be used.  About the only time that the prefix character is
required is when a color is specified as a simple color name, or a
string is a digit string.  Following is an example of the C<[Xsettings]>
section:

 [Xsettings]
 cXde/BackgroundColor=#516A79
 sXde/ThemeName=Penguins
 sGtk/ColorScheme=
 sGtk/CursorThemeName=
 iGtk/CursorThemeSize=18
 iGtk/EnableEventSounds=1
 iGtk/EnableEventInputFeedbackSounds=1
 sGtk/FallbackIconTheme=
 sGtk/FontName=Liberation Sans 9
 Gtk/IconSizes=
 sGtk/IconThemeName=Mist
 sGtk/KeyThemeName=
 sGtk/MenuBarAccel=F10
 sGtk/SoundThemeName=freedesktop
 sGtk/ThemeName=Mist
 iGtk/ToolbarIconSize=2
 iGtk/ToolbarStyle=2
 iNet/EnableEventSounds=1
 iNet/EnableInputFeedbackSounds=1
 sNet/IconThemeName=Mist
 sNet/ThemeName=Mist

 Net/DoubleClickTime=250
 Net/DoubleClickDistance=5
 Net/DndDragThreshold=8
 Net/CursorBlink=True
 Net/CursorBlinkTime=1200
 Net/ThemeName=Default
 Net/IconThemeName=hicolor
 Xft/Antialias=1
 Xft/Hinting=1
 Xft/HintStyle=hintnone
 Xft/RGBA=none
 Xft/DPI=102400
 Gtk/CanChangeAccels=False
 # all one line in file
 Gtk/ColorPalette=black:white:gray50:red:purple:blue:light blue:\
		  green:yellow:orange:lavender:brown:goldenrod:\
		  dodger blue:pink:light green:gray10:gray30:\
		  gray75:gray90
 Gtk/FontName=Sans 10
 Gtk/IconSizes=
 Gtk/KeyThemeName=
 Gtk/ToolbarStyle=2
 Gtk/ToolbarIconSize=2
 Gtk/IMPreeditStyle=
 Gtk/IMStatusStyle=
 Gtk/MenuImages=True
 Gtk/ButtonImages=True
 Gtk/MenuBarAccel=F10


=back

=head1 HISTORY

Although there is a reference implementation of the XSETTINGS protocol,
L<xsettingsd(1)>, it does not monitor any files and uses a single
static configuration file.  This is inadequate for most purposes.  I
wrote B<xde-settings> to manage settings for GTK+ and other components
of the desktop including metathemes for B<XDE>.

=head1 AUTHOR

Brian Bidulock <bidulock@cpan.org>

=head1 SEE ALSO

L<XDE::Xsettings(3pm)>,
L<XSETTINGS cross toolkit configuration proposal|http://standards.freedesktop.org/xsettings-spec/xsettings-spec-0.5.html>,
L<XSETTINGS registry|http://www.freedesktop.org/wiki/Specifications/XSettingsRegistry>.

=cut

# vim: sw=4 tw=72
